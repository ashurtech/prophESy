{
  "name": "prophESy",
  "displayName": "statuESK - Elasticsearch Explorer",
  "description": "VS Code extension for managing and exploring Elasticsearch clusters with health monitoring",
  "version": "1.5.5",
  "publisher": "ASHURTECH",
  "license": "MIT",
  "main": "./out/extension.js",
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p .",
    "watch": "tsc -watch -p .",
    "pretest": "npm run compile",
    "test": "echo \"No tests configured\" && exit 0",
    "package": "vsce package"
  },
  "keywords": [
    "elasticsearch",
    "es",
    "database",
    "cluster",
    "monitoring",
    "health"
  ],
  "author": "ASHURTECH",
  "icon": "resources/prophESy_icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/ASHURTECH/statuESK.git"
  },
  "bugs": {
    "url": "https://github.com/ASHURTECH/statuESK/issues"
  },
  "homepage": "https://github.com/ASHURTECH/statuESK#readme",
  "devDependencies": {
    "@types/node": "^22.15.21",
    "@types/vscode": "^1.100.0",
    "typescript": "^5.8.3",
    "@vscode/vsce": "^3.2.0"
  },
  "dependencies": {
    "@elastic/elasticsearch": "^9.0.2"
  },
  "engines": {
    "vscode": "^1.100.0"
  },
  "activationEvents": [],
  "contributes": {
    "commands": [
      {
        "command": "esExt.addCluster",
        "title": "Add Elasticsearch Cluster",
        "icon": "$(add)"
      },
      {
        "command": "esExt.selectCluster",
        "title": "Select Cluster"
      },
      {
        "command": "esExt.connectToCluster",
        "title": "Connect to Cluster",
        "icon": "$(plug)"
      },
      {
        "command": "esExt.removeCluster",
        "title": "Remove Cluster",
        "icon": "$(trash)"
      },
      {
        "command": "esExt.search",
        "title": "Elasticsearch: Search",
        "icon": "$(search)"
      },
      {
        "command": "esExt.openKibana",
        "title": "Kibana: Open Dashboard",
        "icon": "$(globe)"
      },
      {
        "command": "esExt.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "esExt.clusterContextMenu",
        "title": "Cluster Actions"
      },
      {
        "command": "esExt.clusterHealth",
        "title": "Elasticsearch: Cluster Health",
        "icon": "$(pulse)"
      },
      {
        "command": "esExt.toggleAutoRefresh",
        "title": "Toggle Auto Refresh Health Status",
        "icon": "$(sync)"
      },
      {
        "command": "esExt.exportClusters",
        "title": "Export Cluster Configurations",
        "icon": "$(export)"
      },
      {
        "command": "esExt.importClusters",
        "title": "Import Cluster Configurations",
        "icon": "$(cloud-download)"
      },
      {
        "command": "esExt.clearAllClusterData",
        "title": "Clear All Cluster Data (Dangerous)",
        "icon": "$(trash)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "esExt.addCluster",
          "when": "view == esExtExplorer",
          "group": "navigation@1"
        },
        {
          "command": "esExt.refresh",
          "when": "view == esExtExplorer",
          "group": "navigation@2"
        },
        {
          "command": "esExt.clusterHealth",
          "when": "view == esExtExplorer",
          "group": "navigation@3"
        },
        {
          "command": "esExt.toggleAutoRefresh",
          "when": "view == esExtExplorer",
          "group": "navigation@4"
        },
        {
          "command": "esExt.exportClusters",
          "when": "view == esExtExplorer",
          "group": "navigation@5"
        },
        {
          "command": "esExt.importClusters",
          "when": "view == esExtExplorer",
          "group": "navigation@6"
        }
      ],
      "view/item/context": [
        {
          "command": "esExt.connectToCluster",
          "when": "view == esExtExplorer && viewItem == connect",
          "group": "inline@1"
        },
        {
          "command": "esExt.removeCluster",
          "when": "view == esExtExplorer && viewItem == remove",
          "group": "inline@2"
        },
        {
          "command": "esExt.selectCluster",
          "when": "view == esExtExplorer && viewItem == select",
          "group": "inline@1"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "esExtExplorer",
          "name": "Elasticsearch Explorer",
          "icon": "resources/prophESy_icon.svg"
        }
      ]
    }
  }
}
